/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projects;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class StudentViewPreviousTest extends javax.swing.JFrame {

    String testname,rollNo,subject;
    boolean online,bool=true;
    int size;
    String tab[];
    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    ClientGroup sc;
    StudentHome sh;
    /**
     * Creates new form StudentViewPreviousTest
     */
    public StudentViewPreviousTest() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    public StudentViewPreviousTest(String rollNo,String subject,boolean online,ClientGroup sc,StudentHome sh)
    {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.rollNo = rollNo;
        this.subject = subject;
        this.online = online;
        this.sc = sc;
        this.sh = sh;
        subjectLabel.setText(subject.toUpperCase());
        show_test();
    }
    
    public ArrayList<User> test()
    {
        String query;
        ArrayList<User> test = new ArrayList<>();
        try
        {
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/quizza","root","");
            Statement st = con.createStatement();
            if(online){
                query = "SELECT * FROM `"+subject+"`.`online_test`";
            }
            else{
                query = "SELECT * FROM `"+subject+"`.`test`";
            }
            ResultSet rs = st.executeQuery(query);
            User user;
            while(rs.next())
            {
                user = new User(rs.getString("Test_Name"),rs.getInt("Number_of_Questions"));
                test.add(user);
            }
            con.close();
        }
        catch (ClassNotFoundException e)
        {
            System.out.println(e);
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        return test;
    }
    
    public void show_test()
    {
        //table2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ArrayList<User> list = test();
        size = list.size();
        tab = new String[size];
        DefaultTableModel model = (DefaultTableModel)table1.getModel();
        Object[] row = new Object[1];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getTest();
            model.addRow(row);
        }
        for(int r=0;r<size;r++)
        {
                tab[r] = table1.getModel().getValueAt(r, 0).toString();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        enterTest = new javax.swing.JButton();
        back = new javax.swing.JButton();
        subjectLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(600, 600));

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.setColumnSelectionAllowed(true);
        table1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table1);
        table1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setResizable(false);
        }

        enterTest.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enterTest.setText("Enter into test");
        enterTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterTestActionPerformed(evt);
            }
        });

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projects/back-icon.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        subjectLabel.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        subjectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subjectLabel.setText("Subject");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 208, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(subjectLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                .addGap(72, 72, 72)
                .addComponent(enterTest, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enterTest)
                        .addGap(47, 47, 47))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterTestActionPerformed
        int a = JOptionPane.showConfirmDialog(new JFrame(), "Are you sure want to enter into test?", "Test", JOptionPane.OK_CANCEL_OPTION);
        if(a==0){
            sc.setVisible(false);
        String testPass,tablePass="",query;
        int row = table1.getSelectedRow();
        testname = table1.getModel().getValueAt(row, 0).toString();
        try{
            if(online){
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/quizza","root","");
                st = con.createStatement();
                rs = st.executeQuery("SELECT password FROM `"+subject+"`.`online_test` WHERE `Test_Name`='"+testname+"'");
                if(rs.next())
                    tablePass = rs.getString(1);
                JFrame f = new JFrame();
                testPass = JOptionPane.showInputDialog(f, "Enter Pasword :", "Password", JOptionPane.QUESTION_MESSAGE);
                if(!testPass.equals(tablePass))
                    throw new IncorrectPassException("Wrong Password.!");
            }
            try
            {
                try
                {
                    Class.forName("com.mysql.jdbc.Driver");

                    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentresult","root","");

                    st = con.createStatement();
                    if(online){
                    query="CREATE TABLE `studentresult`.`online_"+testname+"_"+rollNo+"`"+
                                "( `Question_No` INT NOT NULL ,"+
                                " `Selected_Answer` VARCHAR(30) NOT NULL ,"+
                                "`mark` INT NOT NULL , PRIMARY KEY (`Question_No`))";
                    }
                    else{
                        query="CREATE TABLE `studentresult`.`"+testname+"_"+rollNo+"`"+
                                "( `Question_No` INT NOT NULL ,"+
                                " `Selected_Answer` VARCHAR(30) NOT NULL ,"+
                                "`mark` INT NOT NULL , PRIMARY KEY (`Question_No`))";
                    }
                
                    int i = st.executeUpdate(query);
                    con.close();
                    if(bool){
                    if(online)
                        new Instructions(testname,rollNo,subject,true,sh).setVisible(true);
                    else
                        new Instructions(testname,rollNo,subject,false,sh).setVisible(true);
                    this.setVisible(false);
                    bool = false;
                    }
                }
                catch (ClassNotFoundException e)
                {
                    System.out.println(e);
                }
                catch(SQLException e)
                {
                    System.out.println(e);
                    JFrame f = new JFrame();
                    int h = JOptionPane.showConfirmDialog(f, "Already given this test..!\nWant to see result?", testname, JOptionPane.YES_NO_OPTION);
                    if(h==0){
                        System.out.println("show result of this test from testname_rollNo");
                    }
                }
            }
            catch(ArrayIndexOutOfBoundsException e)
            {
                JFrame f = new JFrame();
                JOptionPane.showMessageDialog(f, "Select a Test First","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(ClassNotFoundException e)
        {
            System.out.println(e);
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        catch(IncorrectPassException e)
        {
            JFrame f1 = new JFrame();
            JOptionPane.showMessageDialog(f1, "Wrong Password.!");
        }
        }
    }//GEN-LAST:event_enterTestActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        sh.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentViewPreviousTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentViewPreviousTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentViewPreviousTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentViewPreviousTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentViewPreviousTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton enterTest;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables
}

class IncorrectPassException extends Exception{
    public IncorrectPassException(String s)
    {
        super(s);
    }
}