/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projects;

import java.awt.Color;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author lenovo
 */
public class TeacherScreen extends javax.swing.JFrame {

    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    JLabel msglabel[];
    
    static ServerSocket ss;
    static Socket s;
    static DataInputStream dis;
    static DataOutputStream dout;
    /**
     * Creates new form TeacherScreen
     */
    public TeacherScreen() {
        initComponents();
        msg_area.setEditable(false);
        showmsg();
    }
    
    public void showmsg()
    {
        try{
            Class.forName("com.mysql.jdbc.Driver");
            
            con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/chat","root","root");
            
            st = con.createStatement();
            String query="SELECT * FROM grpchat1";
            rs=st.executeQuery(query);
            StyledDocument doc = msg_area.getStyledDocument();
            Style style = msg_area.addStyle("test style", null);
            for(int i=0;rs.next();i++){
                if(rs.getString(2).equals("teacher"))
                {
                    StyleConstants.setAlignment(style, StyleConstants.ALIGN_RIGHT);
                    StyleConstants.setForeground(style, Color.red);
                    try{doc.insertString(doc.getLength(), "teacher : ", style);
                        doc.setParagraphAttributes(doc.getLength()+1, 1, style, false);}
                    catch(BadLocationException e){}
                }
                else
                {
                    StyleConstants.setAlignment(style, StyleConstants.ALIGN_LEFT);
                    StyleConstants.setForeground(style, Color.blue);
                    try{doc.insertString(doc.getLength(), rs.getString(2)+" : ", style);
                        doc.setParagraphAttributes(doc.getLength()+1, 0, style, false);}
                    catch(BadLocationException e){}
                }
                StyleConstants.setForeground(style, Color.black);
                try{doc.insertString(doc.getLength(), rs.getString(1)+"\n", style);}
                catch(BadLocationException e){}
            }
            con.close();
        }
        catch (ClassNotFoundException e)
        {
            System.out.println(e);
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setText("Send");

        jScrollPane2.setViewportView(msg_area);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherScreen().setVisible(true);
            }
        });
        
        try
        {
            String msgin = "";
            ss = new ServerSocket(8082);
            s = ss.accept();
            dis = new DataInputStream(s.getInputStream());
            dout = new DataOutputStream(s.getOutputStream());
            StyledDocument doc = msg_area.getStyledDocument();
            Style style = msg_area.addStyle("test style", null);
            
            while(!msgin.equals("exit"))
            {
                msgin = dis.readUTF();
                /*if(rs.getString(2).equals("teacher"))
                {
                    StyleConstants.setAlignment(style, StyleConstants.ALIGN_RIGHT);
                    StyleConstants.setForeground(style, Color.red);
                    try{doc.insertString(doc.getLength(), "teacher : ", style);
                        doc.setParagraphAttributes(doc.getLength()+1, 1, style, false);}
                    catch(BadLocationException e){}
                }
                else
                {
                    StyleConstants.setAlignment(style, StyleConstants.ALIGN_LEFT);
                    StyleConstants.setForeground(style, Color.blue);
                    try{doc.insertString(doc.getLength(), rs.getString(2)+" : ", style);
                        doc.setParagraphAttributes(doc.getLength()+1, 0, style, false);}
                    catch(BadLocationException e){}
                }*/
                StyleConstants.setForeground(style, Color.black);
                //try{doc.insertString(doc.getLength(), rs.getString(1)+"\n", style);}
                //catch(BadLocationException e){}
            }
        }
        catch(Exception e)
        {
            System.out.println("hel2 "+e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private static javax.swing.JTextPane msg_area;
    // End of variables declaration//GEN-END:variables
}
